{
  "artifacts": [
    "lapgyn4.cataract.json"
  ],
  "command": "wrapper",
  "experiment": {
    "base_dir": "/home/steven/Github/keras-training-system/src",
    "dependencies": [
      "GPy==1.9.5",
      "GPyOpt==1.2.5",
      "Keras==2.2.2",
      "numpy==1.14.5",
      "sacred==0.7.4",
      "tensorflow-gpu==1.10.1"
    ],
    "mainfile": "optimize.py",
    "name": "medical_densenet169",
    "repositories": [],
    "sources": [
      [
        "evaluate.py",
        "_sources/evaluate_795066c3a0d142fb4b003c7daf61c328.py"
      ],
      [
        "optimize.py",
        "_sources/optimize_9603cec68d99bbdc5e69ce2254b6e51c.py"
      ],
      [
        "train.py",
        "_sources/train_32048fef054942ee8a6cdb845bff828f.py"
      ],
      [
        "utils/util.py",
        "_sources/util_5d7bd30b553dd45d95ec82b8450e9936.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"/home/steven/anaconda3/envs/py36/lib/python3.6/site-packages/sacred/config/captured_function.py\", line 46, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"optimize.py\", line 105, in wrapper\n    return optimize(config)\n",
    "  File \"optimize.py\", line 39, in optimize\n    hyperparameter_optimizer = GPyOpt.methods.BayesianOptimization( f=op_function, domain=bounds )\n",
    "  File \"/home/steven/anaconda3/envs/py36/lib/python3.6/site-packages/GPyOpt/methods/bayesian_optimization.py\", line 118, in __init__\n    self._init_design_chooser()\n",
    "  File \"/home/steven/anaconda3/envs/py36/lib/python3.6/site-packages/GPyOpt/methods/bayesian_optimization.py\", line 193, in _init_design_chooser\n    self.Y, _ = self.objective.evaluate(self.X)\n",
    "  File \"/home/steven/anaconda3/envs/py36/lib/python3.6/site-packages/GPyOpt/core/task/objective.py\", line 50, in evaluate\n    f_evals, cost_evals = self._eval_func(x)\n",
    "  File \"/home/steven/anaconda3/envs/py36/lib/python3.6/site-packages/GPyOpt/core/task/objective.py\", line 74, in _eval_func\n    rlt = self.func(np.atleast_2d(x[i]))\n",
    "  File \"optimize.py\", line 58, in run_model\n    split_dirs = split_data(config['dataset']['split'], config['dataset']['path'])\n",
    "  File \"/home/steven/Github/keras-training-system/src/utils/util.py\", line 88, in split_data\n    class_names = get_sub_dirs(data_dir)\n",
    "  File \"/home/steven/Github/keras-training-system/src/utils/util.py\", line 42, in get_sub_dirs\n    root, *_ = os.walk(path)\n",
    "ValueError: not enough values to unpack (expected at least 1, got 0)\n"
  ],
  "heartbeat": "2018-09-11T06:54:01.759681",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Core(TM) i7-2600 CPU @ 3.40GHz",
    "gpus": {
      "driver_version": "390.87",
      "gpus": [
        {
          "model": "GeForce GTX 980",
          "persistence_mode": false,
          "total_memory": 4041
        }
      ]
    },
    "hostname": "steven-Aurora-R3",
    "os": [
      "Linux",
      "Linux-4.15.0-33-generic-x86_64-with-debian-buster-sid"
    ],
    "python_version": "3.6.5"
  },
  "meta": {
    "command": "wrapper",
    "options": {
      "--beat_interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print_config": false,
      "--priority": null,
      "--queue": false,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [],
      "help": false,
      "with": false
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2018-09-11T06:54:01.749610",
  "status": "FAILED",
  "stop_time": "2018-09-11T06:54:01.761681"
}