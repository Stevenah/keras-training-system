{
  "artifacts": [
    "densenet169.imagenet.transfer.medico.w.reg.json",
    "medico.json"
  ],
  "command": "wrapper",
  "experiment": {
    "base_dir": "/home/steven/Github/keras-training-system/src",
    "dependencies": [
      "Keras==2.2.2",
      "numpy==1.14.5",
      "sacred==0.7.4",
      "tensorflow-gpu==1.10.1"
    ],
    "mainfile": "run.py",
    "name": "densenet169_imagenet_transfer_medico_with_regularization",
    "repositories": [],
    "sources": [
      [
        "evaluate.py",
        "_sources/evaluate_74c7f16e5de658974ec7ef4989a9bfcb.py"
      ],
      [
        "run.py",
        "_sources/run_4195f7731ab921bc8074777c8e02c7a1.py"
      ],
      [
        "train.py",
        "_sources/train_b71b8299b0737b8ca7f652ac8d3f5619.py"
      ],
      [
        "utils/logging.py",
        "_sources/logging_0d548108773d28bfbd74bea8c9a0350e.py"
      ],
      [
        "utils/util.py",
        "_sources/util_3f3726bd2138527c730f11d16fd8703e.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"/home/steven/anaconda3/envs/py36/lib/python3.6/site-packages/sacred/config/captured_function.py\", line 46, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"run.py\", line 177, in wrapper\n    run( config, config_path )\n",
    "  File \"run.py\", line 105, in run\n    file_identifier=f'split_{ file_identifier }' )\n",
    "  File \"/home/steven/Github/keras-training-system/src/train.py\", line 137, in train\n    use_multiprocessing=False)\n",
    "  File \"/home/steven/anaconda3/envs/py36/lib/python3.6/site-packages/keras/legacy/interfaces.py\", line 91, in wrapper\n    return func(*args, **kwargs)\n",
    "  File \"/home/steven/anaconda3/envs/py36/lib/python3.6/site-packages/keras/engine/training.py\", line 1415, in fit_generator\n    initial_epoch=initial_epoch)\n",
    "  File \"/home/steven/anaconda3/envs/py36/lib/python3.6/site-packages/keras/engine/training_generator.py\", line 213, in fit_generator\n    class_weight=class_weight)\n",
    "  File \"/home/steven/anaconda3/envs/py36/lib/python3.6/site-packages/keras/engine/training.py\", line 1215, in train_on_batch\n    outputs = self.train_function(ins)\n",
    "  File \"/home/steven/anaconda3/envs/py36/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py\", line 2666, in __call__\n    return self._call(inputs)\n",
    "  File \"/home/steven/anaconda3/envs/py36/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py\", line 2636, in _call\n    fetched = self._callable_fn(*array_vals)\n",
    "  File \"/home/steven/anaconda3/envs/py36/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1382, in __call__\n    run_metadata_ptr)\n",
    "  File \"/home/steven/anaconda3/envs/py36/lib/python3.6/site-packages/tensorflow/python/framework/errors_impl.py\", line 519, in __exit__\n    c_api.TF_GetCode(self.status.status))\n",
    "tensorflow.python.framework.errors_impl.ResourceExhaustedError: OOM when allocating tensor with shape[16,800,14,14] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\n\t [[Node: training/SGD/gradients/AddN_286-1-TransposeNHWCToNCHW-LayoutOptimizer = Transpose[T=DT_FLOAT, Tperm=DT_INT32, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](training/SGD/gradients/conv4_block18_0_bn/cond/FusedBatchNorm/Switch_grad/cond_grad, PermConstNHWCToNCHW-LayoutOptimizer)]]\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\n\n\t [[Node: loss/add/_7819 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_43827_loss/add\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\n\n"
  ],
  "heartbeat": "2018-09-17T12:37:22.300444",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Core(TM) i7-2600 CPU @ 3.40GHz",
    "gpus": {
      "driver_version": "390.87",
      "gpus": [
        {
          "model": "GeForce GTX 980",
          "persistence_mode": false,
          "total_memory": 4041
        }
      ]
    },
    "hostname": "steven-Aurora-R3",
    "os": [
      "Linux",
      "Linux-4.15.0-34-generic-x86_64-with-debian-buster-sid"
    ],
    "python_version": "3.6.5"
  },
  "meta": {
    "command": "wrapper",
    "options": {
      "--beat_interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print_config": false,
      "--priority": null,
      "--queue": false,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [],
      "help": false,
      "with": false
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2018-09-17T12:35:31.709804",
  "status": "FAILED",
  "stop_time": "2018-09-17T12:37:22.303326"
}