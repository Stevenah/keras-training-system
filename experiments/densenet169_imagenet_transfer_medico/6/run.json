{
  "artifacts": [
    "densenet169.imagenet.transfer.medico.json",
    "medico.json"
  ],
  "command": "wrapper",
  "experiment": {
    "base_dir": "/home/steven/Github/keras-training-system/src",
    "dependencies": [
      "Keras==2.2.2",
      "numpy==1.14.5",
      "sacred==0.7.4",
      "tensorflow-gpu==1.10.1"
    ],
    "mainfile": "run.py",
    "name": "densenet169_imagenet_transfer_medico",
    "repositories": [],
    "sources": [
      [
        "evaluate.py",
        "_sources/evaluate_af9bdeb06071c38b09e5f6227b1ec20a.py"
      ],
      [
        "run.py",
        "_sources/run_4195f7731ab921bc8074777c8e02c7a1.py"
      ],
      [
        "train.py",
        "_sources/train_c14db987ccb151826b3362564191654a.py"
      ],
      [
        "utils/logging.py",
        "_sources/logging_df9c3aa08f68c1a974c42a5b9c63c963.py"
      ],
      [
        "utils/util.py",
        "_sources/util_3f3726bd2138527c730f11d16fd8703e.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"/home/steven/anaconda3/envs/py36/lib/python3.6/site-packages/sacred/config/captured_function.py\", line 46, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"run.py\", line 177, in wrapper\n    run( config, config_path )\n",
    "  File \"run.py\", line 90, in run\n    model = model_builder.build(config)\n",
    "  File \"/home/steven/Github/keras-training-system/src/models/densenet169.py\", line 35, in build\n    regularization = regularization(config['hyper_parameters']['activity_regularizer']['params'])\n",
    "  File \"/home/steven/anaconda3/envs/py36/lib/python3.6/site-packages/keras/regularizers.py\", line 62, in l1_l2\n    return L1L2(l1=l1, l2=l2)\n",
    "  File \"/home/steven/anaconda3/envs/py36/lib/python3.6/site-packages/keras/regularizers.py\", line 34, in __init__\n    self.l1 = K.cast_to_floatx(l1)\n",
    "  File \"/home/steven/anaconda3/envs/py36/lib/python3.6/site-packages/keras/backend/common.py\", line 110, in cast_to_floatx\n    return np.asarray(x, dtype=_FLOATX)\n",
    "  File \"/home/steven/anaconda3/envs/py36/lib/python3.6/site-packages/numpy/core/numeric.py\", line 492, in asarray\n    return array(a, dtype, copy=False, order=order)\n",
    "TypeError: float() argument must be a string or a number, not 'dict'\n"
  ],
  "heartbeat": "2018-09-17T14:05:52.920111",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Core(TM) i7-2600 CPU @ 3.40GHz",
    "gpus": {
      "driver_version": "390.87",
      "gpus": [
        {
          "model": "GeForce GTX 980",
          "persistence_mode": false,
          "total_memory": 4041
        }
      ]
    },
    "hostname": "steven-Aurora-R3",
    "os": [
      "Linux",
      "Linux-4.15.0-34-generic-x86_64-with-debian-buster-sid"
    ],
    "python_version": "3.6.5"
  },
  "meta": {
    "command": "wrapper",
    "options": {
      "--beat_interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print_config": false,
      "--priority": null,
      "--queue": false,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [],
      "help": false,
      "with": false
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2018-09-17T14:05:14.973143",
  "status": "FAILED",
  "stop_time": "2018-09-17T14:05:52.922060"
}